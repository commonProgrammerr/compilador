classDecl: '/templates/class_decl.tmp.c'
functionDecl: '/templates/function_decl.tmp.c'
method: '/templates/method_decl.tmp.c'
varDecl:  '/templates/var_decl.tmp.c'
ifStmt:  '/templates/if_stmt.tmp.c'
whileStmt:  '/templates/while_stmt.tmp.c'
forStmt:  '/templates/for_stmt.tmp.c'
forEachStmt: '/templates/for_each_stmt.tmp.c'
controlStmt: '/templates/control_stmt.tmp.c'
memberAccess: '/templates/member_access.tmp.c'
methodCall: '/templates/method_call.tmp.c'
objectInstantiation: '/templates/object_instantiation.tmp.c'
functionCall: '/templates/function_call.tmp.c'
thisReference: '/templates/this_reference.tmp.c'
superCall: '/templates/super_call.tmp.c'
arrayAccess: '/templates/array_access.tmp.c'
notExpr: '/templates/not_expr.tmp.c'
mulDivExpr: '/templates/mul_div_expr.tmp.c'
addSubExpr: '/templates/add_sub_expr.tmp.c'
relationalExpr: '/templates/relational_expr.tmp.c'
equalityExpr: '/templates/equality_expr.tmp.c'
andExpr: '/templates/and_expr.tmp.c'
orExpr: '/templates/or_expr.tmp.c'
assignment: '/templates/assignment.tmp.c'
literalExpr: '/templates/literal_expr.tmp.c'
VarReference: '/templates/var_reference.tmp.c'
GroupedExpr: '/templates/grouped_expr.tmp.c'
exprList: '/templates/expr_list.tmp.c'